package view_toast

import "fmt"
import "encoding/json"
import "github.com/news/internal/dto/response"


type ParamToast struct {
	Messages string
	Mode     string
	Timer    int
}

func (p *ParamToast) getResponse() []dto_response.Response {
	var r dto_response.Response
	err := json.Unmarshal([]byte(p.Messages), &r)
	if err == nil {
		return []dto_response.Response{r}
	}

	var res []dto_response.Response
	err = json.Unmarshal([]byte(p.Messages), &res)
	if err != nil {
		res = append(res, dto_response.Response{
			Code:    500,
			Message: "Something Wrong!",
		})
	}

	return res
}

script toastTimer(second int) {
	window.addEventListener('DOMContentLoaded', function() {
		// Get the toast container
		var toastContainer = document.querySelector('.toast-container');
		// Loop through each toast and show it
		var toasts = toastContainer.querySelectorAll('.toast');
		toasts.forEach(function(toast) {
			var bootstrapToast = new bootstrap.Toast(toast);
			bootstrapToast.show();
			setTimeout(function() {
				bootstrapToast.hide();
			}, second); // 1000 milliseconds = 1 second
		});
	});
}

templ Toast(param ParamToast) {
	<div class="toast-container position-fixed top-0 end-0 pt-2" style="z-index: 11">
		for _, v := range param.getResponse() {
			<div
				class={ "toast align-items-center p-3 border-0 text-white bg-" + param.Mode }
				role="alert"
				aria-live="assertive"
				aria-atomic="true"
			>
				<div class="d-flex">
					<div class="toast-body">{ fmt.Sprintf("%d", v.Code) }: { v.Message }</div>
					<button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
				</div>
			</div>
		}
	</div>
	@toastTimer(param.Timer)
}

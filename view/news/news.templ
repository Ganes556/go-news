package view_news

import "github.com/news/internal/entity"
import "fmt"

templ DataNews(news []entity.News) {
	<style type="text/css">
		.fit-cover {
			object-fit: cover;
		}

		@media (min-width: 768px) {
			.fit-cover {
				position: absolute;
			}
		}
	</style>
	for i, v := range news {
		if i == 0 {
			<div class="card bg-dark text-white mb-2">
				<img src={ "https://storage.googleapis.com/go-news-bucket/" + v.Cover } class="card-img object-fit-cover" height="400" style="object-position: top" alt="..."/>
				<div
					class="position-absolute bottom-0 text-light w-100 p-2"
					style="background-color: rgba(0, 0, 0, 0.5)"
					x-data="date"
				>
					<h5 class="card-title">{ v.Title }</h5>
					<p class="card-text"><small x-text={ fmt.Sprintf("formatDate(%d)", v.CreatedAt) }></small></p>					
				</div>
			</div>
		} else {
			<div class="card">
				<div class="row g-0">
					<div class="col-sm-4 position-relative">
						<img src={ "https://storage.googleapis.com/go-news-bucket/" + v.Cover } class="card-img fit-cover w-100 h-100" alt="..."/>
					</div>
					<div class="col-sm-8">
						<div class="card-body">
							<h5 class="card-title">
								<a class="link-dark text-decoration-none" href="#" target="_blank">
									{ v.Title }
								</a>
							</h5>
							<span class="badge rounded-pill bg-dark">{ v.Categories.Name } </span>
						</div>
						<div
							class="card-footer border-none d-flex align-items-center align-self-center"
							x-data="date"
						>
							<p class="card-text"><small class="text-body-secondary" x-text={ fmt.Sprintf("formatDate(%d)", v.CreatedAt) }></small></p>
						</div>
					</div>
				</div>
			</div>
		}
	}
}

templ News(categories []entity.Categories, activeCategory string) {
	<nav class="navbar navbar-expand-md border-bottom" style="background-color: #F7F7FC;">
		<div class="container">
			<a href="#" class="navbar-brand" style="height:150px">Brand</a>
			<ul class="navbar-nav">
				<li class="nav-item">
					<a href="#" class="nav-link">menu</a>
				</li>
			</ul>
		</div>
	</nav>
	<nav id="navbar" class="navbar navbar-expand-md justify-content-start sticky-top shadow px-3 mb-5" style="background-color: #F7F7FC;">
		<div class="container">
			<ul
				class="nav w-100 justify-content-start flex-wrap nav-underline"
				x-data={ fmt.Sprintf("{ active: '%s' }", activeCategory) }
			>
				for _, v := range categories {
					<li class="nav-item">
						<a
							class="nav-link"
							:class={ fmt.Sprintf("{ 'active fw-normal' : active === '%s' }", v.Name) }
							x-on:click={ fmt.Sprintf(" active = '%s' ", v.Name) }
							hx-get={ "?category=" + v.Name }
							hx-target="#content-news"
							hx-trigger="click"
							hx-swap="innerHTML"
							href="#"
						>{ v.Name }</a>
					</li>
				}
			</ul>
		</div>
	</nav>
	<section>
		<div class="container row justify-content-center mb-5">
			<div
				id="content-news"
				class="col-9 d-flex flex-column"
				hx-get={ "/news?category=" + activeCategory }
				hx-trigger="load once"
				hx-swap="innerHTML"
			></div>
			<div id="content-popular"></div>
		</div>
	</section>
}

package view_admin_content_news

import "github.com/news/view/component/CKEeditor"
import "github.com/news/internal/entity"
import "fmt"
import "time"
import "github.com/gofiber/fiber/v2"
import "github.com/sujit-baniya/flash"
import "github.com/news/view/component/toast"
import "github.com/news/internal/dto/error"
import "strconv"

script setDataToContentDiv() {
	let d = htmx.find("#res-content")
	d.value = editor.getData()
}

templ GetNews(news []entity.News) {
	<div>
		<div class="container">
			<h1>News</h1>
			<div class="btn btn-primary" hx-get="?page=create-news&partial=1" hx-replace-url="?page=create-news" hx-swap="outerHTML" hx-target="#content">
				Tambah News
			</div>
			<div class="table-responsive-lg mt-5">
				<table class="table table-striped">
					<thead>
						<tr>
							<th scope="col">#</th>
							<th scope="col">Title</th>
							<th scope="col">Category</th>
							<th scope="col">Date</th>
							<th scope="col">Author</th>
							<th scope="col">Actions</th>
						</tr>
					</thead>
					<tbody>
						for i, v := range news {
							<tr class="align-middle">
								<th scope="row">{ fmt.Sprintf("%d",i+1) }</th>
								<td>{ v.Title }</td>
								<td>{ v.Category }</td>
								<td>{ time.Unix(v.CreatedAt, 0).Format(time.DateTime) }</td>
								<td>{ v.User.Name }</td>
								<td class="row gx-1 justify-content-center">
									<div class="col">
										<i class="bi bi-pencil-fill text-success h-4 cursor-pointer"></i>
									</div>
									<div class="col">
										<i class="bi bi-trash-fill text-danger h-4 cursor-pointer"></i>
									</div>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
	</div>
}

templ ModifiedNews(c *fiber.Ctx, oldNews entity.News, csrfToken, method string, url string) {
	if dat, ok := flash.Get(c)["success"].(string); ok && dat == "true" {
		@view_toast.ToastSucc(view_toast.ParamToastSucc{
			Message: flash.Get(c)["message"].(string),
			Timer:   1500,
		})
	}
	if dat, ok := flash.Get(c)["error"].(string); ok && dat == "true" {
		@view_toast.ToastErr(view_toast.ParamToastErr{
			ErrMessages: []dto_error.ErrResponse{
				{
					Message: flash.Get(c)["message"].(string),
					Code: func() int {
						dat, _ := strconv.Atoi(flash.Get(c)["code"].(string))
						return dat
					}(),
				},
			},
			Timer: 1500,
		})
	}
	<div class="container">
		<h1 class="mb-3">Add News</h1>
		<div id="res-output"></div>
		<form
			method={ method }
			action={ templ.URL(url) }
			enctype="multipart/form-data"
			class="mb-3"
		>
			<input name="csrfToken" value={ csrfToken } class="invisible"/>
			<div class="mb-3">
				<label for="title" class="form-label">Title</label>
				<input type="text" class="form-control" id="title" name="title"/>
			</div>
			<div class="mb-3">
				<label for="category" class="form-label">Category</label>
				<input type="text" class="form-control" id="category" name="category"/>
			</div>
			<div class="mb-3">
				<label for="cover" class="form-label">Cover</label>
				<input class="form-control" name="cover" type="file" id="cover"/>
			</div>
			// <div id="res-output" class="ck ck-content"></div>
			<input id="res-content" name="contents" class="invisible"/>
			@view_component_CKEeditor.CKEeditor(oldNews.Content)
			<button type="submit" hx-on:click={ setDataToContentDiv() } class="mt-3 btn btn-primary">Submit</button>
		</form>
	</div>
}

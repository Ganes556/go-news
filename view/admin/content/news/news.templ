package view_admin_content_news

import "github.com/news/view/component/CKEeditor"
import "github.com/news/internal/entity"
import "fmt"
import "time"
import "github.com/news/pkg"
import "github.com/news/view/component/alert"

script setDataToContentDiv() {
	let d = htmx.find("#res-content")
	d.value = editor.getData()
}

templ TrNews(news []entity.News, csrfToken string, lastIndex int) {
	for i, v := range news {
		<tr
			class="align-middle"
			if i + 1 == len(news) {
				hx-get={ fmt.Sprintf("?partial=1&next=%d&last_index=%d", v.ID, i+1+lastIndex) }
				hx-trigger="intersect once"
				hx-swap="afterend"
			}
		>
			<th scope="row">{ fmt.Sprintf("%d",i+1 + lastIndex) }</th>
			<td>{ v.Title }</td>
			<td>{ v.Categories.Name }</td>
			<td>{ time.Unix(v.CreatedAt, 0).Format(time.DateTime) }</td>
			<td>{ v.Users.Name }</td>
			<td class="row gx-1 justify-content-center">
				<div class="col">
					<i hx-get={ fmt.Sprintf("?page=update&id=%d", v.ID) } hx-swap="outerHTML" hx-replace-url={ fmt.Sprintf("?page=update&id=%d", v.ID) } hx-target="#content" class="bi bi-pencil-fill text-success h-4 cursor-pointer"></i>
				</div>
				<div class="col">
					<i
						onClick={ view_component_alert.AlertDeleteScript(fmt.Sprintf("/user/news/%d?csrfToken=%s", v.ID, csrfToken)) }
						class="bi bi-trash-fill text-danger h-4 cursor-pointer"
					></i>
				</div>
			</td>
		</tr>
	}
}

templ GetNews(news []entity.News, csrfToken string) {
	<div id="container-news" class="container-fluid py-3">
		<h1>News</h1>
		<div
			class="btn btn-primary me-3"
			hx-get="?page=create"
			hx-replace-url="?page=create"
			hx-swap="outerHTML"
			hx-target="#content"
		>
			Add News
		</div>
		<div class="table-responsive-lg mt-5">
			<input
				class="form-control"
				type="text"
				name="title"
				hx-get="?partial=1"
				hx-trigger="keyup delay:500ms changed"
				hx-target="#results"
				hx-swap="innerHTML"
				placeholder="search by title..."
			/>
			<table class="table table-striped">
				<thead>
					<tr>
						<th scope="col">#</th>
						<th scope="col">Title</th>
						<th scope="col">Category</th>
						<th scope="col">Date</th>
						<th scope="col">Author</th>
						<th scope="col">Actions</th>
					</tr>
				</thead>
				<tbody id="results">
					@TrNews(news, csrfToken, 0)
				</tbody>
			</table>
		</div>
	</div>
}

templ ImagePreview(urlImg string) {
	<button type="button" class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#imagePreview">
		Show Old Cover
	</button>
	<div class="modal" tabindex="-1" id="imagePreview">
		<div class="modal-dialog modal-lg">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Old Cover</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<img class="img-fluid" src={ urlImg } alt="cover" srcset=""/>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				</div>
			</div>
		</div>
	</div>
}

templ ModifiedNews(param DtoModifiedNews) {
	<div class="container">
		<h1 class="mb-3">
			if param.Method == "PUT" {
				Edit  News
			} else {
				Add News
			}
		</h1>
		<form
			class="mb-3"
			if param.Method == "PUT" {
				id="edit-form"
			} else {
				method={ param.Method }
				action={ templ.URL(param.Url) }
				enctype="multipart/form-data"
			}
		>
			<input name="csrfToken" value={ param.CsrfToken } class="invisible"/>
			if param.Method == "PUT" {
				<input name="id" value={ fmt.Sprintf("%d", param.OldNews.ID) } class="invisible"/>
			}
			<div class="mb-3">
				<label for="title" class="form-label">Title</label>
				<input type="text" class="form-control" id="title" name="title" value={ param.OldNews.Title }/>
			</div>
			<div class="mb-3">
				<label for="category" class="form-label">Category</label>
				<select name="category_id" class="form-select" aria-label="Default select example">
					if param.OldNews.CategoriesID != 0 {
						<option>Select one of this category</option>
					} else {
						<option selected>Select one of this category</option>
					}
					if len(param.Categories) > 0 {
						for _, v := range param.Categories {
							if v.ID == param.OldNews.CategoriesID {
								<option selected value={ fmt.Sprintf("%d", v.ID) }>{ v.Name }</option>
							} else {
								<option value={ fmt.Sprintf("%d", v.ID) }>{ v.Name }</option>
							}
						}
					}
				</select>
			</div>
			<div
				class="mb-1"
				x-init="$nextTick(() => {
				const tooltipTriggerList = document.querySelectorAll(`[data-bs-toggle='tooltip']`)
				const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
			})"
			>
				<label for="cover" class="form-label">Cover</label>
				<small
					data-bs-toggle="tooltip"
					data-bs-placement="top"
					data-bs-title={ pkg.InvalidImageSize }
				>
					<i class="bi bi-question-circle"></i>
				</small>
				<input class="form-control" name="cover" type="file" id="cover"/>
				<script>
					window.addEventListener("load", function () {
						const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
						const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
					})
				</script>
			</div>
			if param.Method == "PUT" {
				@ImagePreview("https://storage.googleapis.com/go-news-bucket/" + param.OldNews.Cover)
			}
			// <div id="res-output" class="ck ck-content"></div>
			<input id="res-content" name="contents" class="invisible"/>
			@view_component_CKEeditor.CKEeditor(param.OldNews.Content)
			<button
				if param.Method == "PUT" {
					hx-put={ param.Url + "/{id}" }
					hx-ext="path-params"
					hx-encoding="multipart/form-data"
					hx-include="#edit-form [name='csrfToken'], [name='id'], [name='title'], [name='category_id'], [name='cover'], [name='contents']"
					hx-trigger="click"
					type="button"
				} else {
					type="submit"
				}
				class="mt-3 btn btn-primary"
			>Submit</button>
		</form>
	</div>
}

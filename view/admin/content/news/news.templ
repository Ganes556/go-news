package view_admin_content_news

import "github.com/news/view/component/CKEeditor"
import "github.com/news/internal/entity"
import "fmt"
import "time"

script setDataToContentDiv() {
	let d = htmx.find("#res-content")
	d.value = editor.getData()
}

script alertDelete(href string) {
	Swal.fire({
		title: 'Are you sure?',
		text: `You won't be able to revert this!`,
		icon: 'warning',
		showCancelButton: true,
		confirmButtonColor: '#3085d6',
		cancelButtonColor: '#d33',
		confirmButtonText: 'Yes, delete it!'
	}).then((result) => {
		if (result.isConfirmed) {
			fetch(href, {
                method: 'DELETE'
            }).then(e => {
				window.location.href = "/user?page=news"
			})
		}
	});
}

templ GetNews(news []entity.News, csrfToken string) {
	<div class="container py-3">
		<h1>News</h1>
		<div
			class="btn btn-primary me-3"
			hx-get="?page=create&partial=1"
			hx-replace-url="?page=create"
			hx-swap="outerHTML"
			hx-target="#content"
		>
			Tambah News
		</div>
		<div class="table-responsive-lg mt-5">
			<table class="table table-striped">
				<thead>
					<tr>
						<th scope="col">#</th>
						<th scope="col">Title</th>
						<th scope="col">Category</th>
						<th scope="col">Date</th>
						<th scope="col">Author</th>
						<th scope="col">Actions</th>
					</tr>
				</thead>
				<tbody>
					for i, v := range news {
						<tr class="align-middle">
							<th scope="row">{ fmt.Sprintf("%d",i+1) }</th>
							<td>{ v.Title }</td>
							<td>{ v.Category.Name }</td>
							<td>{ time.Unix(v.CreatedAt, 0).Format(time.DateTime) }</td>
							<td>{ v.User.Name }</td>
							<td class="row gx-1 justify-content-center">
								<div class="col">
									<i hx-get={ fmt.Sprintf("?page=update&partial=1&id=%d", v.ID) } hx-swap="outerHTML" hx-replace-url={ fmt.Sprintf("?page=edit-news&id=%d", v.ID) } hx-target="#content" class="bi bi-pencil-fill text-success h-4 cursor-pointer"></i>
								</div>
								<div class="col">
									<i
										onClick={ alertDelete(fmt.Sprintf("/user/news/%d?csrfToken=%s", v.ID, csrfToken)) }
										class="bi bi-trash-fill text-danger h-4 cursor-pointer"
									></i>
								</div>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
}

templ ImagePreview(urlImg string) {
	<button type="button" class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#imagePreview">
		Show Old Cover
	</button>
	<div class="modal" tabindex="-1" id="imagePreview">
		<div class="modal-dialog modal-lg">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Old Cover</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<img class="img-fluid" src={ urlImg } alt="cover" srcset=""/>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				</div>
			</div>
		</div>
	</div>
}

templ ModifiedNews(param DtoModifiedNews) {
	<div class="container">
		<h1 class="mb-3">Add News</h1>
		<div id="res-output"></div>
		<form
			method={ param.Method }
			action={ templ.URL(param.Url) }
			enctype="multipart/form-data"
			class="mb-3"
		>
			<input name="csrfToken" value={ param.CsrfToken } class="invisible"/>
			if param.Method == "PUT" {
				<input name="id" value={ fmt.Sprintf("%d", param.OldNews.ID) } class="invisible"/>
			}
			<div class="mb-3">
				<label for="title" class="form-label">Title</label>
				<input type="text" class="form-control" id="title" name="title" value={ param.OldNews.Title }/>
			</div>
			<div class="mb-3">
				<label for="category" class="form-label">Category</label>
				<select name="category_id" class="form-select" aria-label="Default select example">
					<option selected>Category</option>
					if len(param.Categories) > 0 {
						for _, v := range param.Categories {
							<option value={ fmt.Sprintf("%d", v.ID) }>{ v.Name }</option>
						}
					}
				</select>
			</div>
			<div class="mb-1">
				<label for="cover" class="form-label">Cover</label>
				<input class="form-control" name="cover" type="file" id="cover"/>
			</div>
			if param.Method == "PUT" {
				@ImagePreview("https://storage.googleapis.com/go-news-bucket/" + param.OldNews.Cover)
			}
			// <div id="res-output" class="ck ck-content"></div>
			<input id="res-content" name="contents" class="invisible"/>
			@view_component_CKEeditor.CKEeditor(param.OldNews.Content)
			<button type="submit" hx-on:click={ setDataToContentDiv() } class="mt-3 btn btn-primary">Submit</button>
		</form>
	</div>
}
